{
    "title":"Cheatsheets and Legends",
    "subtitle":"",
    "author":"StÃ©phane Ducasse"
}

${slide:title=Pharo}$

[[[
TestCase subclass: #SetTest
	instanceVariableNames: 'empty'
	classVariableNames: ''
	package: 'Reflectivity-Tests-Base'
]]]

[[[
SetTestCase >> setUp
	super setUp.
	empty := Set new.
]]]

[[[
SetTestCase >> testAdd 
  empty add: 5.   "Stimulus"
  empty add: 5.
  self assert: empty size equals: 1   "Check"
]]]
  
${slide:title=Java}$

[[[
class  SetTestCase {
	Set empty;

@Before
public void setUp(){
	empty = new Set();
	}
	
@Test
public void testAdd(){ 
  empty.add(5);  //Stimulus
  empty.add(5);  
  assertEquals(empty.size(), 1);   "Check"
  }
]]]
  


${slide:title=Syntactic Elements}$

| comment| "a comment"|
| character| \$\c \$\# \$\@ |
| string| 'lulu' 'l''idiot'|
| symbol (unique string)| #mac #+ |
| literal array| #(12 23 36)|
| integer| 1, 2r101 |
| real | 1.5 6.03e-34,4, 2.4e7|
| boolean| true, false |
| |  (instances of True and False) |
| undefined | nil |
| |  (instance of UndefinedObject)|
| point| 10@120|

${slide:title=Essential Constructs}$

- Temporary variable declaration: ==| var |==
- Assignment: ==var \:= aValue==
- Separator: ==message . message==
- Return: ==\^ expression==
- Llexical closures
[[[
[ :x | x + 2 ] value: 5
> 7 
]]]


